# This is a sample application properties file,
# which would be used for a Postgres configuration.

spring.jpa.hibernate.ddl-auto=update

# show queries if desired
# spring.jpa.show-sql=true                                                                                     
spring.datasource.initialization-mode=never
spring.datasource.platform=postgres
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/contacts                                                
spring.datasource.username=contacts
spring.datasource.password=dbpassword

adminPassword=adminpassword

# Use this line to use JPA1 style column and table naming strategy,
# if you need to preserve old databases. Do not use this line
# if you don't have that situation
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Asterisk settings
asteriskContext=dialer
asteriskHost=sipmachine.exmaple.com
asteriskPassword=sippassword

# REPLACE THIS with a secret key.
rememberMeKey=135d597a1bc709b2ef825feb1508d057

# See:
# https://www.baeldung.com/spring-boot-embedded-tomcat-logs
# and: https://www.tutorialworks.com/spring-boot-log-to-file/
server.tomcat.accesslog.enabled=true
# Embedded Tomcat allows you to specify a log pattern, or use the pre-defined
# pattern called combined. combined is a convenient pattern which
# includes the user-agent string
server.tomcat.accesslog.pattern=combined
# access logs:
server.tomcat.accesslog.directory=/var/log/cmi2w
# and application logs:
logging.file.path=/var/log/cmi2w
# if the file logback-spring.xml is in the same directory
# it seems like it gets detected by Spring Boot and used, so don't do this.
